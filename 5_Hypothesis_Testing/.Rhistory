### Write your code here
ggplot(combinedAB, aes(x = Algal_Density, fill = Location)) +
geom_density(alpha = 0.5) +
labs(x = "Algal Density", y = "Density Estimate") +
ggtitle("Kernel Density Estimation of Algal Densities in Locations A and B") +
scale_fill_manual(values = c("Location A" = "blue", "Location B" = "red"))
library(ggplot)
library(ggplot2)
### Write your code here
ggplot(combinedAB, aes(x = Algal_Density, fill = Location)) +
geom_density(alpha = 0.5) +
labs(x = "Algal Density", y = "Density Estimate") +
ggtitle("Kernel Density Estimation of Algal Densities in Locations A and B") +
scale_fill_manual(values = c("Location A" = "blue", "Location B" = "red"))
### Write your code here
ggplot(combinedAB, aes(x = Algal_Density, fill = Location)) +
geom_density(alpha = 0.5) +
labs(x = "Algal Density", y = "Density Estimate") +
ggtitle("Kernel Density Estimation of Algal Densities in Locations A and B") +
scale_fill_manual(values = c("Location A" = "blue", "Location B" = "red"))
library(ggplot2)
### Write your code here
ggplot(combinedAB, aes(x = Algal_Density, fill = Location)) +
geom_density(alpha = 0.5) +
labs(x = "Algal Density", y = "Density Estimate") +
ggtitle("Kernel Density Estimation of Algal Densities in Locations A and B") +
scale_fill_manual(values = c("Location A" = "blue", "Location B" = "red"))
### Write your code here
library(ggplot2)
mean_density_locationA <- 200
mean_density_locationB <- 220
std <- 20
n <- 50
#creating the
locationA <- rnorm(n, mean_density_locationA, std)
locationB <- rnorm(n, mean_density_locationB, std)
#make each location have a different value to tell between locations
locAB <- c(locationA, locationB)
label_location <- c(rep(1, n), rep(2,n))
combinedAB <- data.frame("Algal_Density" = locAB, Location = factor(label_location, levels = c(1,2), labels = c("Location A", "Location B")))
head(combinedAB)
### Write your code here
ggplot(combinedAB, aes(x = Algal_Density, fill = Location)) +
geom_density(alpha = 0.5) +
labs(x = "Algal Density", y = "Density Estimate") +
ggtitle("Kernel Density Estimation of Algal Densities in Locations A and B") +
scale_fill_manual(values = c("Location A" = "blue", "Location B" = "red"))
### Write your code here
ggplot(combinedAB, aes(x = Algal_Density, fill = Location)) +
geom_density(alpha = 0.5, adjust=1.5) +
labs(x = "Algal Density", y = "Density Estimate") +
ggtitle("Kernel Density Estimation of Algal Densities in Locations A and B") +
scale_fill_manual(values = c("Location A" = "blue", "Location B" = "red"))
### Write your code here
ggplot(combinedAB, aes(x = Algal_Density, fill = Location)) +
geom_density(alpha = 0.5, adjust=1.5) +
labs(x = "Algal Density", y = "Density Estimate") +
ggtitle("Kernel Density Estimation of Algal Densities in Locations A and B") +
scale_fill_manual(values = c("Location A" = "blue", "Location B" = "red"))+
xlim(120, 300)
# Chunk 1
### Exercise 1.
# Chunk 2
5. You have the following data which you obtained from an experiment consisting of <complete this>. Use the t-test to assess the difference between both samples. What does the t-test indicate about the data? Is it generated from the same distribution?
### Exercise 1.
library(ggplot2)
npairs <- 100
nsamples <- 50
meanval <- 10
stdval <- 4
s1 <- rnorm(n=nsamples, mean=meanval, std=stdval)
rnorm?
asd
helo(rnorm)
help(rnorm)
s1 <- rnorm(n=nsamples, mean=meanval, sd=stdval)
s2 <- rnorm(n=nsamples, mean=meanval, sd=stdval)
mean_difference <- numeric(num_pairs)
mean_difference <- numeric(npairs)
# Generate the samples and calculate the differences in means
for (i in 1:num_pairs) {
s1 <- rnorm(n=nsamples, mean=meanval, sd=stdval)
s2 <- rnorm(n=nsamples, mean=meanval, sd=stdval)
mean_differences[i] <- mean(s1) - mean(s2)
}
# Generate the samples and calculate the differences in means
for (i in 1:npairs) {
s1 <- rnorm(n=nsamples, mean=meanval, sd=stdval)
s2 <- rnorm(n=nsamples, mean=meanval, sd=stdval)
mean_differences[i] <- mean(s1) - mean(s2)
}
# Generate the samples and calculate the differences in means
for (i in 1:npairs) {
s1 <- rnorm(n=nsamples, mean=meanval, sd=stdval)
s2 <- rnorm(n=nsamples, mean=meanval, sd=stdval)
mean_difference[i] <- mean(s1) - mean(s2)
}
# Generate the samples and calculate the differences in means
for (i in 1:npairs) {
mean_difference[i] <- mean(s1) - mean(s2)
}
i
mean_difference
# Create a data frame to store the differences in means
data <- data.frame(mean_difference)
# Create a ggplot object and add a histogram with a density curve
ggplot(data, aes(x = mean_difference)) +
geom_histogram(binwidth = 0.5, fill = "lightblue", color = "black", alpha = 0.7) +
geom_density(color = "red", size = 1) +
labs(title = "Distribution of Mean Differences",
x = "Mean Difference") +
theme_minimal()
# Create a ggplot object and add a histogram with a density curve
ggplot(data, aes(x = mean_difference)) +
geom_histogram(binwidth = 0.5, fill = "lightblue", color = "black", alpha = 0.7) +
geom_density(color = "red", size = 8) +
labs(title = "Distribution of Mean Differences",
x = "Mean Difference") +
theme_minimal()
# Create a ggplot object and add a histogram with a density curve
ggplot(data, aes(x = mean_difference)) +
geom_histogram(binwidth = 0.1, fill = "lightblue", color = "black", alpha = 0.7) +
geom_density(color = "red", size = 1) +
labs(title = "Distribution of Mean Differences",
x = "Mean Difference") +
theme_minimal()
#loop
for(i in 1:5){
print(i)
}
rm(list=ls())
### Exercise 1.
some_array <- 1:5
some_array
some_array[1] <- some_array[1] - 1
some_array[2] <- some_array[2] - 1
some_array[3] <- some_array[3] - 1
some_array[4] <- some_array[4] - 1
some_array[5] <- some_array[5] - 1
some_array
#loop
for(i in 1:5){
print(i)
}
### Exercise 1.
some_array <- 10:15
some_array
some_array[1] <- some_array[1] - 1
some_array[2] <- some_array[2] - 1
some_array[3] <- some_array[3] - 1
some_array[4] <- some_array[4] - 1
some_array[5] <- some_array[5] - 1
some_array
a <- rnorm(10, 0, 1)
b <- rnorm(10, 0, 1)
mean(a) - mean(b)
#repeat this multiple times - use a for loop
for(batch in 1:10){
a <- rnorm(10, 0, 1)
b <- rnorm(10, 0, 1)
mean(a) - mean(b)
}
#repeat this multiple times - use a for loop
for(batch in 1:10){
a <- rnorm(10, 0, 1)
b <- rnorm(10, 0, 1)
print(mean(a) - mean(b))
}
#create a list/array to store for loop in
list <- 1:10
#repeat this multiple times - use a for loop
for(batch in 1:10){
a <- rnorm(10, 0, 1)
b <- rnorm(10, 0, 1)
print(mean(a) - mean(b))
list[batch] <- (mean(a) - mean(b))
}
library(ggplot2)
