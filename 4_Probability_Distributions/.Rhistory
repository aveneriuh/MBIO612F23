A <- c(1, 2, 3, 4, 5)
B <- c(4, 5, 6, 7, 8)
library(ggplot2)
### Write your code here
library(ggplot2)
### Write your code here
library(ggplot2)
mean_density_locationA <- 200
mean-density_locationB <- 220
std <- 20
n <- 50
A <- c(1, 2, 3, 4, 5)
B <- c(4, 5, 6, 7, 8)
locationA <- rnorm(n, mean_density_locationA, std)
mean-density_locationB <- 220
mean-density_locationB <- 220
mean_density_locationA <- 200
mean-density_locationB <- 220
mean_density_locationB <- 220
locationB <- rnorm(n, mean_density_locationB, std)
#combine into dataframe
Algal_density <- data.frame(locationA, locationB)
Algal_density
#combine into dataframe
algal_density <- data.frame(locationA, locationB)
### Write your code here
ggplot(data=algal_density, mapping = aes(x=locationA, y=locationB))
### Write your code here
ggplot(data=algal_density, mapping = aes(x=locationA, y=locationB))+
geom_boxplot()
### Write your code here
ggplot(data=algal_density, mapping = aes(x=locationA, y=locationB))+
geom_boxplot()
help(geom_boxplot)
View(algal_density)
### Write your code here
ggplot(data=algal_density, mapping = aes(x=locationA, y=locationB))+
geom_boxplot(data=algal_density, mapping = aes(x=locationA, y=locationB))
intersect(A, B)
# complete the following code
overlapping_items <- function(A,B){
return(length(intersect(A,B)))
}
overlapping_items(A, B)  # Output should be 2
A <- c(1, 2, 3, 4, 5)
B <- c(4, 5, 6, 7, 8)
intersect(A, B)
# complete the following code
unique_items <- function(A,B){
return(length(union(A,B)))
}
stopifnot(unique_items(A,B) == 8)
unique_items(A, B)  # Output: 8
stopifnot(unique_items(A,B) == 8)
return(length(union(A,B))+1)
stopifnot(unique_items(A,B) == 8)
View(unique_items)
### Write your code here
ggplot(data=algal_density, mapping = aes(x=locationA, y=locationB))+
geom_boxplot()
### Write your code here
ggplot(data=algal_density, aes(x=locationA, y=locationB))+
geom_boxplot()
View(algal_density)
### Write your code here
ggplot(data=algal_density, aes(x=locationA, y=locationB))+
geom_point()+
geom_boxplot()
### Write your code here
ggplot(data=algal_density, aes(x=locationA, y=locationB))+
geom_boxplot()+
labs(
x="Location A", "Location B"
y="individuals/m^2"
### Write your code here
ggplot(data=algal_density, aes(x=locationA, y=locationB))+
geom_boxplot()+
labs(
x="Location A" "Location B"
### Write your code here
library(ggplot2)
mean_density_locationA <- 200
mean_density_locationB <- 220
std <- 20
n <- 50
#creating the
locationA <- rnorm(n, mean_density_locationA, std)
locationB <- rnorm(n, mean_density_locationB, std)
#combine into dataframe
algal_density <- data.frame(locationA, locationB)
colnames(algal_density) <- c("Location A", "Location B")
algal_density
#make each location have a different value to tell between locations
locAB <- c(locationA, locationB)
label_location <- c(rep(1, n), rep(2,n))
combinedAB <- data.frame("Algal_Density_per_m^2_combined" = locAB, Location = factor(label_location, levels = c(1,2), labels = c("Location A", "Location B")))
head(combinedAB)
scale_fill_manual(values = (c("Location A" = "blue", "Location B" = "green"))
### Write your code here
algal_boxplot <- ggplot(data=algal_density, aes(x=locationA, y=locationB))+
algal_boxplot <- ggplot(data=algal_density, aes(x=locationA, y=locationB))+
geom_boxplot()+
labs(
title = "Algal Density Boxplot",
x="LocationA", "Location B",
y="individuals/m^2"
) +
scale_fill_manual(values = (c("Location A" = "blue", "Location B" = "green")))
algal_boxplot <- ggplot(data=combinedAB, aes(x=locationA, y=locationB))+
geom_boxplot()+
labs(
title = "Algal Density Boxplot",
x="LocationA", "Location B",
y="individuals/m^2"
) +
scale_fill_manual(values = (c("Location A" = "blue", "Location B" = "green")))
combinedAB <- data.frame("Algal_Density" = locAB, Location = factor(label_location, levels = c(1,2), labels = c("Location A", "Location B")))
head(combinedAB)
algal_boxplot <- ggplot(data=combinedAB, aes(x=Location, y=Algal_Density))+
geom_boxplot()+
labs(
title = "Algal Density Boxplot",
x="LocationA", "Location B",
y="individuals/m^2"
) +
scale_fill_manual(values = (c("Location A" = "blue", "Location B" = "green")))
algal_boxplot <- ggplot(data=combinedAB, aes(x=Location, y=Algal_Density))+
geom_boxplot()+
labs(
title = "Algal Density Boxplot",
x="LocationA", "Location B",
y="individuals/m^2"
) +
scale_fill_manual(values = (c("Location A" = "blue", "Location B" = "green")))
algal_boxplot <- ggplot(data=combinedAB, aes(x=Location, y=Algal_Density))+
geom_boxplot()+
labs(
title = "Algal Density Boxplot",
x="LocationA", "Location B",
y="individuals/m^2"
) +
scale_fill_manual(values = (c("Location A" = "blue", "Location B" = "green")))
algal_boxplot <- ggplot(data=combinedAB, aes(x=Location, y=Algal_Density))+
geom_boxplot()+
labs(
title = "Algal Density Boxplot",
x="LocationA", "Location B",
y="individuals/m^2"
)
algal_boxplot <- ggplot(data=combinedAB, aes(x=Location, y=Algal_Density))+
geom_boxplot(fill="blue", alpha = 0.5)+
labs(
title = "Algal Density Boxplot",
x="LocationA", "Location B",
y="individuals/m^2")
algal_boxplot
### Write your code here
combined_plot <- ggplot(combinedAB, aes(x=Location, y=Algal_density))+
geom_density(fill="blue", alpha = 0.5)
combined_plot
### Write your code here
combined_plot <- ggplot(combinedAB, aes(x=Location, y=Algal_density))+
geom_density(fill="blue", alpha = 0.5)
combined_plot
### Write your code here
combined_plot <- ggplot(combinedAB, aes(x=Location, y=Algal_density))+
geom_density(fill="blue", alpha = 0.5)+
scale_fill_manual(values=c("Location A" = "blue", "Location B" = "green"))
combined_plot
algal_boxplot
### Write your code here
ggplot(combinedAB, aes(x = Algal_Density, fill = Location)) +
geom_density(alpha = 0.5) +
labs(x = "Algal Density", y = "Density Estimate") +
ggtitle("Kernel Density Estimation of Algal Densities in Locations A and B") +
scale_fill_manual(values = c("A" = "blue", "B" = "red"))
### Write your code here
ggplot(combinedAB, aes(x = Algal_Density, fill = Location)) +
geom_density(alpha = 0.5) +
labs(x = "Algal Density", y = "Density Estimate") +
ggtitle("Kernel Density Estimation of Algal Densities in Locations A and B") +
scale_fill_manual(values = c("Location A" = "blue", "Location B" = "red"))
### Write your code here
n2 <- 10
pA <- 0.7
pB <- 0.5
prob_A_7 <- sum(dbinom(7:10, n2, pA))
prob_A_7
prob_B_7 <- (dbinom(7:10, n2, pB))
prob_B_7 <- sum(dbinom(7:10, n2, pB))
prob_B_7
### Write your code here
#poission for 5 occurances
dpois(5, 3)
#poission for 3 occurrences
dpois(0:3, 3)
#poission for 3 occurrences
sum(dpois(0:3, 3))
ppois(3, 3)
list1 <- c(44.40, 47.70, 65.59, 50.71, 51.29, 67.15, 54.61, 37.35, 43.13, 45.54, 62.24, 53.60, 54.01, 51.11,
44.44, 67.87, 54.98, 30.33, 57.01, 45.27, 39.32, 47.82, 39.74, 42.71, 43.75, 33.13, 58.38, 51.53,
38.62, 62.54, 54.26, 47.05, 58.95, 58.78, 58.22, 56.89, 55.54, 49.38, 46.94, 46.20, 43.05, 47.92,
37.35, 71.69, 62.08, 38.77, 45.97, 45.33, 57.80, 49.17, 52.53, 49.71, 49.57, 63.69, 47.74, 65.16,
34.51, 55.85, 51.24, 52.16, 53.80, 44.98, 46.67, 39.81, 39.28, 53.04, 54.48, 50.53, 59.22, 70.50,
45.09, 26.91, 60.06, 42.91, 43.12, 60.26, 47.15, 37.79, 51.81, 48.61, 50.06, 53.85, 46.29, 56.44,
47.80, 53.32, 60.97, 54.35, 46.74, 61.49, 59.94, 55.48, 52.39, 43.72, 63.61, 44.00, 71.87, 65.33,
47.64, 39.74)
list2 <- c(44.34, 48.85, 41.30, 39.79, 30.73, 44.32, 33.23, 19.98, 39.30, 58.78, 36.37, 54.12, 20.73, 44.17,
52.79, 49.52, 46.59, 35.39, 32.25, 29.64, 46.76, 30.79, 37.64, 41.16, 72.66, 35.22, 48.53, 46.17,
30.57, 43.93, 66.67, 51.77, 45.62, 38.66, 14.20, 61.97, 23.09, 56.10, 73.64, 23.34, 55.53, 41.07,
21.42, 22.28, 20.98, 37.04, 23.07, 55.32, 76.50, 25.69, 56.82, 56.54, 49.98, 29.87, 43.21, 40.79,
53.44, 39.41, 59.65, 39.38, 60.79, 29.26, 26.10, 93.62, 38.75, 49.47, 54.55, 37.74, 52.75, 50.53,
41.77, 45.98, 44.49, 76.93, 33.88, 28.56, 45.57, 49.66, 51.55, 38.12, 29.05, 63.95, 39.76, 32.02,
41.46, 42.04, 61.65, 46.27, 56.31, 37.51, 48.22, 40.13, 46.42, 31.57, 25.34, 74.96, 54.01, 26.23,
35.83, 27.22)
### Write your code here
listdata <- data.frame(Value=c(list1, list2), Group=factor(rep(c("List 1", "List 2", each = 100))))
### Write your code here
#making a data frame while separating values from list 1 and 2 by making it a category
listdata <- data.frame(Value=c(list1, list2), Group=factor(rep(c("List 1", "List 2", each = length(list1)))))
List1 <- data.frame(
Value = list1,
Group = "List 1"
)
List2 <- data.frame(
Value - list2,
Group = "List 2"
)
List2 <- data.frame(
Value = list2,
Group = "List 2"
)
#combine df into one
ListDF <- rbind(List1, List2)
head(ListDF)
ggplot(ListDF, aes(x=Value, fill=Group))+
geom_density(alpha=0.5)+
labs(
x="Value",
y="List Number"
)+
scale_fill_manual(values=c("List 1" = "blue", "List 2" = "red"))
